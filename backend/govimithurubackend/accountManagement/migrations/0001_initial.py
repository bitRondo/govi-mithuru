# Generated by Django 3.2.9 on 2021-11-19 14:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userType', models.SmallIntegerField(choices=[(None, '- Select -'), (0, 'Admin'), (1, 'Farmer'), (2, 'AgriOfficer')], help_text='Required', verbose_name='User type')),
                ('agriServiceCenter', models.CharField(help_text='Required', max_length=150, verbose_name='Agriculture Service Center the user belongs to')),
                ('gramaNiladhariDiv', models.CharField(blank=True, max_length=150, verbose_name='Grama Niladhari Division of the user')),
                ('regNo', models.CharField(help_text='Required', max_length=200, unique=True, verbose_name='Registration Number')),
                ('name', models.CharField(help_text='Required', max_length=250, verbose_name='Full name of the user')),
                ('address', models.CharField(blank=True, max_length=250, verbose_name='Address of residence')),
                ('phone', models.CharField(help_text='Required', max_length=15, verbose_name='Phone number')),
                ('nic', models.CharField(help_text='Required', max_length=25, verbose_name='National Identity Card number')),
                ('preferredLocale', models.CharField(blank=True, max_length=5, verbose_name='Preferred Locale - SI or EN')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
